@page "/productcrud/{ProductID:int?}"
@using WestWindSystem.Entities
@using WestWindSystem.BLL


<PageTitle>Product CRUD</PageTitle>

<h1>Product CRUD</h1>

@if (FeedbackMessage != String.Empty)
{
    <div class="alert alert-info">
        @FeedbackMessage
    </div>
}

<!--EditForm Region-->
<!--We use IDs instead of names for our label/inputs as this will compile to JS.-->
<EditForm>
    <fieldset>
        <label id="productID">Product ID</label>
        <InputNumber id="productID"/>

        <label id="name">Name</label>
        <InputText id="name"/>

        <label id="supplier">Supplier</label>
        <InputSelect id="supplier">

        </InputSelect>
        <label id="category">Category</label>
        <InputSelect id="category">

        </InputSelect>

        <label id="qty">Qty / Unit</label>
        <InputText id="qty"/>

        <label id="unitprice">Unit Price</label>
        <InputNumber id="unitprice"/>

        <label id="minorder">Min Order Qty</label>
        <InputNumber id="minorder"/>

        <label id="units">Units on Order</label>
        <InputNumber id="units"/>
    </fieldset>
</EditForm>

<!--EditForm Region End-->

@code {

    private string? FeedbackMessage = String.Empty;

    [Inject]
    private ProductServices _ProductServices { get; set; }

    [Inject]
    private CategoryServices _CategoryServices { get; set; }

    [Inject]
    private SupplierServices _SupplierServices { get; set; }

    private Product CurrentProduct = new();

    private List<Category> Categories = new();
    private List<Supplier> Suppliers = new();

    private int SelectedCategoryId;

    //Must match the value in our @page declaration
    [Parameter]
    public int? ProductID { get; set; }

    [Inject]
    protected NavigationManager NavManager { get; set; }

    protected override void OnInitialized()
    {
        Categories = _CategoryServices.GetAllCategories();
        Suppliers = _SupplierServices.GetAllSuppliers();

        base.OnInitialized(); 
    }

    private void Clear()
    {
        FeedbackMessage = String.Empty;
    }

    private Exception GetInnerException(Exception ex)
    {
        while (ex.InnerException != null)
            ex = ex.InnerException;
        return ex;
    }
}
