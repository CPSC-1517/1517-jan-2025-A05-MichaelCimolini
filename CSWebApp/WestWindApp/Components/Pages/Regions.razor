@page "/regions"

<PageTitle>Regions Query</PageTitle>
@rendermode InteractiveServer

@using WestWindSystem.BLL;
@using WestWindSystem.Entities;

<h1>Region Query</h1>

@if (feedBackMsg.Length > 0)
{
    <div class="alert alert-info">
        <p>@feedBackMsg</p>
    </div>
}

@if (errorMsgs.Count > 0)
{
    <div class="alert alert-danger">
        <p>Please fix the following issues:</p>
        <ul>
            @foreach (var error in errorMsgs)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}

<!--Query Form-->

<p>Input Query Values</p>
<fieldset>
    <label for="regionid">Enter Region ID:</label>
    <input id="regionid" type="number" placeholder="Enter ID" @bind="RequestedID">

    <button type="submit" @onclick="GetByID">Fetch</button>

    <label for="regionselect">Select a Region:</label>
    <select id="regionselect" @bind="SelectedID">
        <option value="0">...select</option>
        @foreach(var region in RegionList)
        {
            <option value="@region.RegionID">@region.RegionDescription</option>
        }
    </select>

    <button type="submit" @onclick="GetBySelect">Fetch</button>
</fieldset>

<p>Results</p>

@if(region != null)
{
    <p>Region ID: @region.RegionID</p>
    <p>Region Description: @region.RegionDescription</p>
}

@code {
    private string feedBackMsg = "";
    private List<string> errorMsgs = new List<string>();

    private int RequestedID = 0;
    private int SelectedID = 0;

    private Region region = null;

    private List<Region> RegionList = new List<Region>();

    [Inject]
    private RegionServices _regionServices { get; set; }

    protected override void OnInitialized()
    {
        RegionList = _regionServices.GetAllRegions();

        base.OnInitialized();
    }

    public void GetByID()
    {
        ClearData();

        if(RequestedID <= 0)
        {
            errorMsgs.Add($"Your region id value {RequestedID} is Invalid.");
        }

        if(errorMsgs.Count == 0)
        {
            region = _regionServices.GetRegionByID(RequestedID);

            if (region == null)
            {
                feedBackMsg = $"No region found!";
            }
        }
    }

    public void GetBySelect()
    {
        ClearData();

        if (SelectedID == 0)
        {
            errorMsgs.Add($"Please select a Region.");
        }

        if (errorMsgs.Count == 0)
        {
            region = _regionServices.GetRegionByID(SelectedID);

            if (region == null)
            {
                feedBackMsg = $"No region found!";
            }
        }
    }

    private void ClearData()
    {
        feedBackMsg = String.Empty;
        errorMsgs.Clear();
        region = null;
    }
}