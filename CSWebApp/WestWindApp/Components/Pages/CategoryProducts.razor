@page "/categoryproducts"
<PageTitle>Category Products</PageTitle>

@rendermode InteractiveServer

@using WestWindSystem.Entities;
@using WestWindSystem.BLL;

<h1>Category Products</h1>
<h4>... select category to view products</h4>

<!-- area to feedback messages-->
@if (FeedbackMessage.Length > 0)
{
    <div class="alert alert-info">
        <p>@FeedbackMessage</p>
    </div>
}
<!-- area to error messages-->
@if (ErrorMsgs.Count > 0)
{
    <div class="alert alert-danger">
        <p>Please fix the following issues:</p>
        <ul>
            @foreach (var Error in ErrorMsgs)
            {
                <li>@Error</li>
            }
        </ul>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <label for="catlist">Select Product Category:</label>
        <select id="catlist" @bind="CategoryId">
            <option value="0">Select category ...</option>
            @foreach(var Category in CategoryList)
            {
                <option value="@Category.CategoryID">@Category.CategoryName</option>
            }
        </select>

        <button type="submit" class="btn btn-outline-primary rounded-pill"
        @onclick="FetchProducts">Fetch Products</button>
        <!--
        these two button will demonstrate ways that you can call
        another page from an existing page
        one button will have a NavLink to the new page
        one button will call an event method on this page which
        will navigate to the new page


        <button type="submit" class="btn btn-outline-secondary rounded-pill">
        <NavLink href="productcrud">CRUD via Navlink</NavLink>
        </button>

        <button type="submit" class="btn btn-outline-secondary rounded-pill"
        @onclick="GoToCRUD">
        CRUD via Event
        </button> 
        -->
    </div>
</div>

<div class="row">
    @if (ProductList.Count > 0)
    {
        <div class="offset-2 col-md-8 overflow-scroll" style="height:450px;">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Unit Size</th>
                        <th>Company Name</th>
                        <th>Disc.</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(Product Item in ProductList)
                    {
                        <tr>

                            <td>@Item.ProductName</td>
                            <td>@Item.QuantityPerUnit</td>
                            <td> @Item.Supplier.CompanyName</td>
                            <td>@(Item.Discontinued ? "Yes" : " ")</td>
                            <!--
                            Ternary Operatior:
                            ((Statement to assess true or false) ? True response : False response)

                            ==

                            if (Statement to assess true or false)
                            {
                            True response
                            }

                            else
                            {
                            False response
                            }
                            -->
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        if (CategoryId > 0)
        {
            <div class="offset-3 col-md-6 text-center" style="font-size:48px">
                <p>No products for the selected category</p>
            </div>
        }
    } 

</div>

<!-- create a filter input area
drop down list of category names to select from

-->
@code {

    private string FeedbackMessage = "";
    private List<string> ErrorMsgs { get; set; } = new List<string>();

    //inject the CategoryService into the page
    //this will allow access to the methods in the CategoryService BLL class
    [Inject]
    private CategoryServices _CategoryServices { get; set; }

    //inject the ProductService into the page
    [Inject]
    private ProductServices _ProductServices { get; set; }

    private int CategoryId { get; set; }

    private List<Category> CategoryList { get; set; } = new();
    private List<Product> ProductList { get; set; } = new();

    [Inject]
    private NavigationManager NavManager { get; set; }

    protected override void OnInitialized()
    {
        //retrieve the list of category via the CategoryServices in your BLL
        CategoryList = _CategoryServices.GetAllCategories();

        base.OnInitialized();
    }


    private void FetchProducts()
    {
        Clear();

        //fetch the list of products depending of the category selection
        if( CategoryId == 0)
        {
            FeedbackMessage = "Please select a category.";
        }

        else
        {
            ProductList = _ProductServices.GetProductByCategoryID(CategoryId);
        }

        /*Same as:
         * CategoryID == 0 ? {FeedbackMessage = "Message"} :
         *                   {ProductList = _ProductServices.GetPro.....};
         *
         */ 
    }

    private void GoToCRUD()
    {
        //this event will use the Navigate services of the web software
        //the Navigate services must be injected into the page
        //the location your are going to is referenced by the page's routing parameter

    }

    private void Clear()
    {
        FeedbackMessage = String.Empty;
        ErrorMsgs.Clear();
        ProductList.Clear();
    }
}
